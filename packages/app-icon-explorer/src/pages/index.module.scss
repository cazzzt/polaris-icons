$borderColor: #e5e6eb;
$pagePadding: 32px;
$gridColumnMinWidth: 320px;
$gridGap: 32px;
$gridMinWidth: ($gridColumnMinWidth * 2) + ($pagePadding * 2);
$gridMaxWidth: 100%;
:global {
  body {
    min-width: $gridMinWidth;
  }
}

.page {
  position: relative;
  background: #ffffff;
  display: grid;
  max-width: $gridMaxWidth;
  margin: 0 auto;
  padding: 0 $pagePadding;
  grid-template-columns: minmax($gridColumnMinWidth, auto) $gridColumnMinWidth;
}

.page::before {
  content: '';
  position: fixed;
  top: 5.6rem;
  right: 0;
  left: 0;
  height: 4px;
  background-image: linear-gradient(
    0deg,
    rgba(240, 240, 241, 0) 35%,
    rgba(240, 240, 241, 1) 100%
  );
}

.listing {
  padding-top: 48px;
  padding-right: ($gridGap - 1px);
  border-right: 1px solid $borderColor;
}

.listing > :not(:first-child) {
  margin-top: 48px;
  padding-top: 20px;
  border-top: 1px solid $borderColor;
}

.panel {
  min-height: 100vh;
}

.panelFixed {
  display: flex;
  width: $gridColumnMinWidth;
  height: calc(100% - 60px);
  padding: 60px 16px 0;

  @media (min-width: $gridMinWidth) {
    --details-panel-justification: space-between;
    position: fixed;
    right: 1.6rem;
    overflow-y: auto;
  }

  // Once we hit the max width then we want to account for that rather than
  // have the panel pinned the the right edge of the screen
  @media (min-width: $gridMaxWidth) {
    right: calc(50vw - #{$gridMaxWidth / 2} + 1.6rem);
  }
}
